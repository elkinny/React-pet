{"version":3,"sources":["components/Header/Header.js","components/Header/index.js","pages/About/About.js","components/ToDo/AddToDo/AddToDo.js","components/ToDo/ToDoItem/ToDoItem.js","components/ToDo/ToDoList/ToDoList.js","store/actions.js","pages/ToDo/ToDo.js","store/actionCreators.js","utils.js","components/App/App.js","components/App/index.js","store/reducer.js","index.js","store/index.js"],"names":["Header","to","className","About","AddToDo","postToDo","useState","title","setTitle","onSubmit","e","preventDefault","length","type","name","placeholder","value","onChange","target","ToDoItem","toDoItem","toggleToDo","deleteToDo","id","completed","htmlFor","checked","onClick","ToDoList","toDoItems","map","key","mapDispatchToProps","getTodos","dispatch","axios","get","process","then","res","payload","data","newToDo","Math","random","toString","substr","post","getState","newToDos","filter","delete","catch","connect","state","useEffect","App","basename","path","component","ToDo","initialState","action","store","middleware","thunk","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.445f8a69.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './styles.css';\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <h1>ToDo List</h1>\r\n    <nav>\r\n      <Link to=\"/\" className=\"link\">\r\n        Home\r\n      </Link>\r\n      <Link to=\"/about\" className=\"link\">\r\n        About\r\n      </Link>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import Header from './Header';\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst About = () => (\r\n    <>\r\n      <h1>About</h1>\r\n      <p>Lorem ipsum</p>\r\n    </>\r\n  );\r\n\r\nexport default About;\r\n","import React, { useState } from 'react';\r\n\r\nimport './styles.css';\r\n\r\nconst AddToDo = ({ postToDo }) => {\r\n  const [title, setTitle] = useState('');\r\n\r\n  const handleInput = e => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const addToDo = e => {\r\n    e.preventDefault();\r\n    if (title.length > 3) {\r\n      postToDo(title);\r\n      setTitle('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={addToDo} className=\"addTodo\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        placeholder=\"Add to do item ...\"\r\n        value={title}\r\n        onChange={handleInput}\r\n      />\r\n      <input type=\"submit\" value=\"Add\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddToDo;\r\n","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nconst ToDoItem = ({toDoItem, toggleToDo, deleteToDo}) => {\r\n  const { id, title, completed } = toDoItem;\r\n\r\n  const toggleItem = () => {\r\n    toggleToDo(id);\r\n  };\r\n\r\n  const deleteItem = () => {\r\n    deleteToDo(id);\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <label htmlFor={id}>\r\n        <input\r\n          type=\"checkbox\"\r\n          id={id}\r\n          checked={completed}\r\n          onChange={toggleItem}\r\n        />\r\n        <i />\r\n        <span>{title}</span>\r\n        <button onClick={deleteItem}>â€“</button>\r\n      </label>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React from 'react';\r\n\r\nimport './styles.css';\r\nimport ToDoItem from '../ToDoItem/ToDoItem';\r\n\r\nconst ToDoList = ({toDoItems, toggleToDo, deleteToDo}) => {\r\n  const createList = () => {\r\n    return toDoItems.map(toDoItem => (\r\n      <ToDoItem\r\n        id={toDoItem.id}\r\n        key={toDoItem.id}\r\n        toDoItem={toDoItem}\r\n        toggleToDo={toggleToDo}\r\n        deleteToDo={deleteToDo}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return <ul className=\"to-do__list\">{createList()}</ul>;\r\n}\r\n\r\nexport default ToDoList;\r\n","export const POST_TODO = 'POST_TODO';\r\nexport const DELETE_TODO = 'DELETE_TODO';\r\nexport const GET_TODOS = 'GET_TODOS';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { AddToDo, ToDoList } from 'components/ToDo';\r\nimport { getTodos, postToDo, deleteToDo, toggleToDo } from 'store/actionCreators';\r\n\r\nconst ToDo = ({\r\n  toDoItems = [],\r\n  getTodos,\r\n  postToDo,\r\n  deleteToDo,\r\n  toggleToDo\r\n}) => {\r\n  useEffect(() => getTodos(), [getTodos]);\r\n\r\n  return (\r\n    <>\r\n      <AddToDo postToDo={postToDo} />\r\n      <ToDoList\r\n        toDoItems={toDoItems}\r\n        toggleToDo={toggleToDo}\r\n        deleteToDo={deleteToDo}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = { getTodos, postToDo, deleteToDo, toggleToDo };\r\nconst mapStateToProps = state => ({\r\n  toDoItems: state.toDoItems,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ToDo);\r\n","import axios from 'axios';\r\n\r\nimport { GET_TODOS, POST_TODO, DELETE_TODO, TOGGLE_TODO } from './actions';\r\nimport { generateId } from 'utils';\r\n\r\nconst getTodos = () => dispatch => {\r\n  axios.get(process.env.REACT_APP_DB_LINK).then(res =>\r\n    dispatch({\r\n      type: GET_TODOS,\r\n      payload: res.data,\r\n    }),\r\n  )\r\n}\r\n\r\nconst postToDo = title => dispatch => {\r\n  const newToDo = {\r\n    id: generateId(),\r\n    title,\r\n    completed: false,\r\n  };\r\n\r\n  axios\r\n    .post(process.env.REACT_APP_DB_LINK, newToDo)\r\n    .then(res => {\r\n      dispatch({\r\n        type: POST_TODO,\r\n        payload: res.data,\r\n      })\r\n  });\r\n};\r\n\r\nconst deleteToDo = id => (dispatch, getState) => {\r\n  const {toDoItems} = getState();\r\n  const newToDos = toDoItems.filter(\r\n    toDoItem => toDoItem.id !== id\r\n  );\r\n\r\n  axios\r\n    .delete(`${process.env.REACT_APP_DB_LINK}/${id}`)\r\n    .then(() => dispatch({\r\n        type: DELETE_TODO,\r\n        payload: newToDos,\r\n      }))\r\n    .catch(() => dispatch({\r\n        type: DELETE_TODO,\r\n        payload: newToDos,\r\n      }));\r\n};\r\n\r\nconst toggleToDo = id => (dispatch, getState) => {\r\n  const {toDoItems} = getState();\r\n  const newToDoItems = toDoItems.map(toDoItem => {\r\n    if (toDoItem.id === id) toDoItem.completed = !toDoItem.completed;\r\n    return toDoItem;\r\n  });\r\n\r\n  dispatch({\r\n    type: TOGGLE_TODO,\r\n    payload: newToDoItems,\r\n  });\r\n};\r\n\r\n\r\nexport { getTodos, postToDo, deleteToDo, toggleToDo }","const generateId = () =>\r\n'_' +\r\nMath.random()\r\n  .toString(36)\r\n  .substr(2, 9);\r\n\r\nexport { generateId }","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Header from 'components/Header';\r\nimport { About, ToDo } from 'pages';\r\n\r\nimport './styles.css';\r\n\r\nconst basename = process.env.NODE_ENV === 'development' ? '/' : '/React-to-do';\r\n\r\nconst App = () => (\r\n  <Router basename={basename}>\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/about\" component={About} />\r\n          <Route path=\"/\" component={ToDo} />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n","import App from './App';\r\n\r\nexport default App;","import { GET_TODOS, POST_TODO, DELETE_TODO, TOGGLE_TODO } from './actions';\r\n\r\nconst initialState = {\r\n  toDoItems: [],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case POST_TODO:\r\n      return {\r\n        ...state,\r\n        toDoItems: [...state.toDoItems, action.payload],\r\n      };\r\n    case GET_TODOS:\r\n    case DELETE_TODO:\r\n    case TOGGLE_TODO:\r\n      return {\r\n        ...state,\r\n        toDoItems: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport App from 'components/App';\r\nimport createStore from './store'\r\n\r\nconst store = createStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducer.js';\r\n\r\nexport default initialState => {\r\n  const middleware = [thunk];\r\n\r\n  const composeEnhancers =\r\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n      : compose;\r\n\r\n  const enhancer = composeEnhancers(applyMiddleware(...middleware));\r\n\r\n  const store = createStore(rootReducer, initialState || {}, enhancer);\r\n\r\n  return store;\r\n};"],"sourceRoot":""}