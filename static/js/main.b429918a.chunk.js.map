{"version":3,"sources":["components/Header/Header.js","components/Header/index.js","pages/About/About.js","components/ToDo/AddToDo/AddToDo.js","components/ToDo/ToDoItem/ToDoItem.js","components/ToDo/ToDoList/ToDoList.js","pages/ToDo/ToDo.js","components/Login/LoginDetails/LoginDetails.js","components/Login/PersonalDetails/PersonalDetails.js","components/Login/Confirmation/Confirmation.js","pages/Login/Login.js","components/App/App.js","components/App/index.js","index.js"],"names":["Header","Component","logout","history","this","props","clearUserData","push","render","logButton","isLoggedIn","className","onClick","to","About","Fragment","AddToDo","state","title","handleInput","e","setState","target","name","value","addToDo","preventDefault","length","onSubmit","type","placeholder","onChange","ToDoItem","getStyle","toDoItem","completed","toggleToDo","id","deleteToDo","htmlFor","checked","ToDoList","createList","toDoItems","map","key","ToDo","_generateId","Math","random","toString","substr","changeState","axios","delete","DbLink","then","res","filter","catch","err","newToDo","post","data","LoginDetails","values","username","password","nextStep","PersonalDetails","firstName","lastName","email","prevStep","Confirmation","navigateToToDo","userData","alert","Login","step","selectComponent","App","newState","basename","componentDidMount","get","process","exact","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b429918a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\n\r\nimport './styles.css';\r\n\r\nexport default class Header extends Component {\r\n  logout = history => {\r\n    this.props.clearUserData();\r\n    history.push('/login');\r\n  };\r\n\r\n  render() {\r\n    const logButton = this.props.isLoggedIn ? (\r\n      <Route\r\n        render={({ history }) => (\r\n          <button\r\n            className=\"link\"\r\n            onClick={() => {\r\n              this.logout(history);\r\n            }}\r\n          >\r\n            Logout\r\n          </button>\r\n        )}\r\n      />\r\n    ) : (\r\n      <Link to=\"/login\" className=\"link\">\r\n        Log in\r\n      </Link>\r\n    );\r\n\r\n    return (\r\n      <header>\r\n        <h1>ToDo List</h1>\r\n        <nav>\r\n          {logButton}\r\n          <Link to=\"/todo\" className=\"link\">\r\n            Home\r\n          </Link>\r\n          <Link to=\"/about\" className=\"link\">\r\n            About\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import Header from './Header';\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>About</h1>\r\n      <p>Lorem ipsum</p>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './styles.css';\r\n\r\nexport class AddToDo extends Component {\r\n  state = {\r\n    title: '',\r\n  };\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  addToDo = e => {\r\n    e.preventDefault();\r\n    if (this.state.title.length > 3) {\r\n      this.props.addToDo(this.state.title);\r\n      this.setState({\r\n        title: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.addToDo} className=\"addTodo\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Add to do item ...\"\r\n          value={this.state.title}\r\n          onChange={this.handleInput}\r\n        />\r\n        <input type=\"submit\" value=\"Add\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nAddToDo.propTypes = {\r\n  addToDo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddToDo;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './styles.css';\r\n\r\nexport class ToDoItem extends Component {\r\n  getStyle = () => {\r\n    return this.props.toDoItem.completed ? 'completed' : '';\r\n  };\r\n\r\n  toggleToDo = () => {\r\n    this.props.toggleToDo(this.props.toDoItem.id);\r\n  };\r\n\r\n  deleteToDo = () => {\r\n    this.props.deleteToDo(this.props.toDoItem.id);\r\n  };\r\n\r\n  render() {\r\n    const { id, title } = this.props.toDoItem;\r\n\r\n    return (\r\n      <li>\r\n        <label htmlFor={id}>\r\n          <input\r\n            type=\"checkbox\"\r\n            id={id}\r\n            checked={this.props.toDoItem.completed}\r\n            onChange={this.toggleToDo}\r\n          />\r\n          <i />\r\n          <span>{title}</span>\r\n          <button onClick={this.deleteToDo}>–</button>\r\n        </label>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nToDoItem.propTypes = {\r\n  toDoItem: PropTypes.object.isRequired,\r\n  toggleToDo: PropTypes.func.isRequired,\r\n  deleteToDo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ToDoItem;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './styles.css';\r\nimport ToDoItem from '../ToDoItem/ToDoItem';\r\n\r\nclass ToDoList extends Component {\r\n  createList() {\r\n    return this.props.toDoItems.map(toDoItem => (\r\n      <ToDoItem\r\n        id={toDoItem.id}\r\n        key={toDoItem.id}\r\n        toDoItem={toDoItem}\r\n        toggleToDo={this.props.toggleToDo}\r\n        deleteToDo={this.props.deleteToDo}\r\n      />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return <ul className=\"to-do__list\">{this.createList()}</ul>;\r\n  }\r\n}\r\n\r\n// PropTypes\r\nToDoList.propTypes = {\r\n  toDoItems: PropTypes.array.isRequired,\r\n  toggleToDo: PropTypes.func.isRequired,\r\n  deleteToDo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ToDoList;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { AddToDo, ToDoList } from 'components/ToDo';\r\n\r\nexport class ToDo extends Component {\r\n  _generateId = () =>\r\n    '_' +\r\n    Math.random()\r\n      .toString(36)\r\n      .substr(2, 9);\r\n\r\n  toggleToDo = id => {\r\n    const toDoItems = this.props.toDoItems.map(toDoItem => {\r\n      if (toDoItem.id === id) toDoItem.completed = !toDoItem.completed;\r\n      return toDoItem;\r\n    });\r\n\r\n    this.props.changeState({ toDoItems });\r\n  };\r\n\r\n  deleteToDo = id => {\r\n    axios\r\n      .delete(`${this.props.DbLink}/${id}`)\r\n      .then(res =>\r\n        this.props.changeState({\r\n          toDoItems: this.props.toDoItems.filter(\r\n            toDoItem => toDoItem.id !== id\r\n          ),\r\n        })\r\n      )\r\n      .catch(err =>\r\n        this.props.changeState({\r\n          toDoItems: this.props.toDoItems.filter(\r\n            toDoItem => toDoItem.id !== id\r\n          ),\r\n        })\r\n      );\r\n  };\r\n\r\n  addToDo = title => {\r\n    const newToDo = {\r\n      id: this._generateId(),\r\n      title,\r\n      completed: false,\r\n    };\r\n    axios.post(this.props.DbLink, newToDo).then(res => {\r\n      this.props.changeState({\r\n        toDoItems: [...this.props.toDoItems, res.data],\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <AddToDo addToDo={this.addToDo} />\r\n        <ToDoList\r\n          toDoItems={this.props.toDoItems}\r\n          toggleToDo={this.toggleToDo}\r\n          deleteToDo={this.deleteToDo}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDo;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class LoginDetails extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username...\"\r\n          value={this.props.values.username}\r\n          onChange={this.props.handleInput}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password...\"\r\n          value={this.props.values.password}\r\n          onChange={this.props.handleInput}\r\n        />\r\n        <button onClick={this.props.nextStep}>Next</button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class PersonalDetails extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          placeholder=\"firstName...\"\r\n          value={this.props.values.firstName}\r\n          onChange={this.props.handleInput}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          placeholder=\"lastName...\"\r\n          value={this.props.values.lastName}\r\n          onChange={this.props.handleInput}\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"email...\"\r\n          value={this.props.values.email}\r\n          onChange={this.props.handleInput}\r\n        />\r\n        <div className=\"buttons-block\">\r\n          <button onClick={this.props.prevStep}>Back</button>\r\n          <button onClick={this.props.nextStep}>Next</button>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport './styles.css';\r\n\r\nexport default class Confirmation extends Component {\r\n  navigateToToDo = history => {\r\n    const { values } = this.props;\r\n    values.state = 1;\r\n    this.props.changeState({ userData: values });\r\n\r\n    if (values.username.length > 3 || values.password.length > 3)\r\n      history.push('/todo');\r\n    else alert('Too small username or password');\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      password,\r\n      firstName,\r\n      lastName,\r\n      email,\r\n    } = this.props.values;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <p className=\"confirmation__data\">\r\n          <span className=\"confirmation__label\">username</span>\r\n          <span className=\"confirmation__data\">{username}</span>\r\n        </p>\r\n        <p className=\"confirmation__data\">\r\n          <span className=\"confirmation__label\">password</span>\r\n          <span className=\"confirmation__data\">{password}</span>\r\n        </p>\r\n        <p className=\"confirmation__data\">\r\n          <span className=\"confirmation__label\">first Name</span>\r\n\r\n          <span className=\"confirmation__data\">{firstName}</span>\r\n        </p>\r\n        <p className=\"confirmation__data\">\r\n          <span className=\"confirmation__label\">last Name</span>\r\n\r\n          <span className=\"confirmation__data\">{lastName}</span>\r\n        </p>\r\n        <p className=\"confirmation__data\">\r\n          <span className=\"confirmation__label\">email</span>\r\n\r\n          <span className=\"confirmation__data\">{email}</span>\r\n        </p>\r\n\r\n        <div className=\"buttons-block\">\r\n          <button onClick={this.props.prevStep}>Back</button>\r\n          <Route\r\n            render={({ history }) => (\r\n              <button\r\n                onClick={() => {\r\n                  this.navigateToToDo(history);\r\n                }}\r\n              >\r\n                Done\r\n              </button>\r\n            )}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { LoginDetails, PersonalDetails, Confirmation } from 'components/Login';\r\nimport './styles.css';\r\n\r\nexport default class Login extends Component {\r\n  state = this.props.userData;\r\n\r\n  nextStep = () => {\r\n    this.setState({ step: this.state.step + 1 });\r\n  };\r\n\r\n  prevStep = () => {\r\n    this.setState({ step: this.state.step - 1 });\r\n  };\r\n\r\n  handleInput = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  selectComponent() {\r\n    const { step } = this.state;\r\n    const { username, password, firstName, lastName, email } = this.state;\r\n    const values = { username, password, firstName, lastName, email };\r\n\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <LoginDetails\r\n            handleInput={this.handleInput}\r\n            nextStep={this.nextStep}\r\n            values={values}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <PersonalDetails\r\n            handleInput={this.handleInput}\r\n            nextStep={this.nextStep}\r\n            prevStep={this.prevStep}\r\n            values={values}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <Confirmation\r\n            nextStep={this.nextStep}\r\n            prevStep={this.prevStep}\r\n            values={values}\r\n            changeState={this.props.changeState}\r\n            clearUserData={this.props.clearUserData}\r\n          />\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"login\">{this.selectComponent()}</div>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport Header from 'components/Header';\r\nimport { About, ToDo, Login } from 'pages';\r\n\r\nimport './styles.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    toDoItems: [],\r\n    userData: {\r\n      step: 1,\r\n      username: '',\r\n      password: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n    },\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(process.env.REACT_APP_DB_LINK).then(res =>\r\n      this.setState({\r\n        toDoItems: res.data,\r\n      })\r\n    );\r\n  }\r\n\r\n  changeState = newState => {\r\n    this.setState(newState);\r\n  };\r\n\r\n  clearUserData = () => {\r\n    this.setState({\r\n      userData: {\r\n        step: 1,\r\n        username: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n      },\r\n    });\r\n  };\r\n\r\n  basename = process.env.NODE_ENV === 'development' ? '' : '/React-to-do';\r\n\r\n  render() {\r\n    const { username, password } = this.state.userData;\r\n    const isLoggedIn = username && password;\r\n    return (\r\n      <Router basename={this.basename}>\r\n        <div className=\"App\">\r\n          <div className=\"container\">\r\n            <Header\r\n              isLoggedIn={isLoggedIn}\r\n              clearUserData={this.clearUserData}\r\n            />\r\n\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/todo\"\r\n                render={() => {\r\n                  return isLoggedIn ? (\r\n                    <ToDo\r\n                      changeState={this.changeState}\r\n                      toDoItems={this.state.toDoItems}\r\n                      DbLink={this.DbLink}\r\n                    />\r\n                  ) : (\r\n                    <Redirect to=\"/login\" />\r\n                  );\r\n                }}\r\n              />\r\n\r\n              <Route path=\"/about\" component={About} />\r\n\r\n              <Route\r\n                exact\r\n                path=\"/login\"\r\n                render={() =>\r\n                  isLoggedIn ? (\r\n                    <Redirect to=\"/todo\" />\r\n                  ) : (\r\n                    <Login\r\n                      changeState={this.changeState}\r\n                      userData={this.state.userData}\r\n                    />\r\n                  )\r\n                }\r\n              />\r\n\r\n              <Route\r\n                exact\r\n                path=\"/\"\r\n                render={() =>\r\n                  isLoggedIn ? <Redirect to=\"/todo\" /> : <Redirect to=\"/login\" />\r\n                }\r\n              />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import App from './App';\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from 'components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}